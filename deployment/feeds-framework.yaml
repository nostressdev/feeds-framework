apiVersion: v1
kind: ServiceAccount
metadata:
  name: feeds-framework
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: feeds-framework
spec:
  selector:
    matchLabels:
      app: feeds-framework
  replicas: 3
  template:
    metadata:
      labels:
        app: feeds-framework
    spec:
      serviceAccountName: feeds-framework
      imagePullSecrets:
        - name: regcred
      containers:
        - name: feeds-framework
          image: cr.yandex/crpka9tj9s0es9movrgk/feeds-framework:latest
          imagePullPolicy: Always
          command: ["./bin/feeds-framework"]
          ports:
            - containerPort: 80
              name: grpc
            - containerPort: 8000
              name: healthcheck
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - name: GRPC_ADDR
              value: "0.0.0.0"
            - name: GRPC_PORT
              value: "80"
            - name: PROBE_ADDR
              value: "0.0.0.0"
            - name: PROBE_PORT
              value: "8000"
            - name: PROMETHEUS_PORT
              value: "81"
            - name: SECRET_KEY
              value: "IVKESJPMKEDKWZVH"
            - name: NODE_NUMBER
              value: "1"
            - name: LOG_LEVEL
              value: "DEBUG"
            - name: FDB_CLUSTER_FILE
              value: /mnt/fdb-volume/coordinators
          volumeMounts:
            - name: fdb-volume
              mountPath: /mnt/fdb-volume
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8000
            failureThreshold: 1
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /liveness
              port: 8000
            failureThreshold: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8000
            initialDelaySeconds: 1
            periodSeconds: 5
      volumes:
        - name: fdb-volume
          secret:
            secretName: fdb
---
apiVersion: v1
kind: Service
metadata:
  name: feeds-framework
  labels:
    app: feeds-framework
spec:
  ports:
    - port: 80
  selector:
    app: feeds-framework
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: feeds-framework-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-http2: enabled
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
spec:
  rules:
    - host: feeds-framework.nostress.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: feeds-framework
                port:
                  number: 80
  tls:
    - hosts:
        - feeds-framework.nostress.dev
      secretName: api-feeds-framework-cert